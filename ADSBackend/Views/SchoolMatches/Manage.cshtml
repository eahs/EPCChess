@model ADSBackend.Models.Match

@{

}

<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a asp-controller="Admin" asp-action="Index">Home</a>
    </li>
    <li>
        <a asp-controller="SchoolMatches" asp-action="Index">Matches</a>
    </li>
    <li class="breadcrumb-item active">
        <strong>@Model.HomeSchool.ShortName vs @Model.AwaySchool.ShortName</strong>
    </li>
</ol>

<div class="ibox">
    <div class="ibox-title"><h4>Chess Match: @Model.HomeSchool.ShortName vs @Model.AwaySchool.ShortName</h4></div>
    <div class="ibox-content">
        @if (!Model.MatchStarted && (!Model.AwayRosterLocked || !Model.HomeRosterLocked))
        {
            <div class="alert alert-danger text-center">
                This match cannot begin until both home and away rosters are set up and locked. <br /><br />
                <a class="btn btn-w-m btn-danger" asp-controller="SchoolMatches" asp-action="MatchSetup" asp-route-id="@Model.MatchId">Set Up Match Roster</a>
            </div>
        }
        else if (!Model.MatchStarted)
        {
            <div class="alert alert-warning">
                Both home and away rosters have been locked for this match.  Changes can still be made to rosters up until the match is officially started.  Start the match by clicking the "Begin Match" button below. <br /><br />
                <a class="btn btn-w-m btn-danger" asp-controller="SchoolMatches" asp-action="MatchSetup" asp-route-id="@Model.MatchId">Set Up Match Roster</a>

                <button class="btn btn-primary" type="button" style="margin-left: 20px" onclick="confirmMatchStart()"><i class="fa fa-play"></i> Begin Match</button>

            </div>

        }

        <!--
        <table class="table-bordered table-hover">
            <thead>
            <th colspan="1"></th>
            <th colspan="1">@Model.HomeSchool.ShortName</th>
            <th></th>
            <th colspan="1">@Model.AwaySchool.ShortName</th>
            </thead>
            <tr>
                <td style="width:1%">Brd</td>
                <td>Home</td>
                <td style="width:1%">Result</td>
                <td>Away</td>
            </tr>
            @foreach (var game in Model.Games)
            {
                <tr>
                    <td class="text-center" style="width:1%">@game.BoardPosition</td>
                    <td>
                        @(game.HomePlayerFullName)<br />
                        @if (game.HomePlayer != null && Model.MatchStarted)
                        {
                            <span class="chessrating">@(game.HomePlayerGameRating)</span>
                        }
                        else if (game.HomePlayer != null)
                        {
                            <span class="chessrating">(@(game.HomePlayer.Rating))</span>
                        }
                    </td>
                    <td class="text-center">@game.HomePoints-@game.AwayPoints</td>
                    <td>
                        @(game.AwayPlayerFullName)<br />
                        @if (game.AwayPlayer != null && Model.MatchStarted)
                        {
                            <span class="chessrating">@(game.AwayPlayerGameRating)</span>
                        }
                        else if (game.AwayPlayer != null)
                        {
                            <span class="chessrating">(@(game.AwayPlayer.Rating))</span>
                        }
                    </td>
                </tr>
            }
        </table>
        -->
        @foreach (var game in Model.Games)
        {
            <div class="panel panel-default">
                <div class="panel-heading">
                    <span class="boardcardheader">Board @game.BoardPosition</span>
                    @if (Model.MatchStarted)
                    {
                        <div class="btn-group">
                            <button data-toggle="dropdown" class="btn btn-primary btn-sm dropdown-toggle">Report Results <b class="caret"></b></button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#" onclick="reportResult(@game.MatchId, @game.GameId, 1)">@game.HomePlayer?.FirstName @game.HomePlayer?.LastName (@Model.HomeSchool.Abbreviation) Won</a></li>
                                <li><a class="dropdown-item" href="#" onclick="reportResult(@game.MatchId, @game.GameId, 2)">@game.AwayPlayer?.FirstName @game.AwayPlayer?.LastName (@Model.AwaySchool.Abbreviation) Won</a></li>
                                <li><a class="dropdown-item" href="#" onclick="reportResult(@game.MatchId, @game.GameId, 3)">Draw</a></li>
                                <li><a class="dropdown-item" href="#" onclick="reportResult(@game.MatchId, @game.GameId, 4)">Reset Winner</a></li>
                            </ul>
                        </div>
                    }
                </div>
                <div class="panel-body">

                    <table>
                        <tr>
                            <td width="190" style="vertical-align: middle; text-align: center">
                                @if (game.HomePlayer != null && Model.MatchStarted)
                                {
                                    @(game.HomePlayerFullName)
                                    <span class="chessrating" id="HomeRating_@game.GameId">@(game.HomePlayerGameRating)</span>
                                }
                                else if (game.HomePlayer != null)
                                {
                                    @(game.HomePlayerFullName)
                                    <span class="chessrating" id="AwayRating_@game.GameId">(@(game.HomePlayer.Rating))</span>
                                }
                                else
                                {
                                    <span>Unassigned</span>
                                }
                            </td>
                            <td class="boardcardresult">
                                <div id="HomePoints_@game.GameId">@game.HomePoints</div>
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align: center">vs</td>
                            <td>&nbsp;</td>
                        </tr>
                        <tr>
                            <td width="190" style="vertical-align: middle; text-align: center">
                                @if (game.AwayPlayer != null && Model.MatchStarted)
                                {
                                    @(game.AwayPlayerFullName)
                                    <span class="chessrating">@(game.AwayPlayerGameRating)</span>
                                }
                                else if (game.AwayPlayer != null)
                                {
                                    @(game.AwayPlayerFullName)
                                    <span class="chessrating">(@(game.AwayPlayer.Rating))</span>
                                }
                                else
                                {
                                    <span>Unassigned</span>
                                }
                            </td>
                            <td class="boardcardresult">
                                <div id="AwayPoints_@game.GameId">@game.AwayPoints</div>
                            </td>
                        </tr>

                    </table>

                </div>

            </div>
        }

    </div>
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}

@section Scripts {

    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

    <script type="text/javascript">

        function reportResult(matchId, gameId, result) {

            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();

            $.ajax({
                data: {
                    __RequestVerificationToken: token,
                    matchid: matchId,
                    gameid: gameId,
                    result: result
                },
                success: function (response) {
                    response = JSON.parse(response);

                    if (response.Status !== "OK") {
                        swal({
                            title: "An Error Occurred",
                            text: response.Status,
                            icon: "error",
                        });
                    } else {
                        $("#HomeRating_" + gameId).html(response.HomePlayerGameRating);
                        $("#AwayRating_" + gameId).html(response.AwayPlayerGameRating);
                        $("#HomePoints_" + gameId).html(response.HomePoints);
                        $("#AwayPoints_" + gameId).html(response.AwayPoints);

                        swal({
                            title: "Game Reported",
                            text: "Thank you for reporting the game result!",
                            icon: "success",
                        });

                    }
                },
                type: 'POST',
                url: '/SchoolMatches/ReportResult'
            });
        }

        function confirmMatchStart() {
            swal({
                    title: "Are you sure you want to begin the match?",
                    text: "Once begun, you will not be able to make any roster changes.",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                .then((choice) => {
                    if (choice) {
                        swal("The match is now underway.  Be sure to record your results after each game concludes.", {
                            icon: "success",
                        });
                    } else {
                        swal("Begin match aborted.  You may continue to make roster changes.");
                    }
                });
        }

    </script>
}